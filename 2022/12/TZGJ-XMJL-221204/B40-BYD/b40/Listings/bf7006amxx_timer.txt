; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--list --debug -c --asm --interleave --gnu -o.\obj\bf7006amxx_timer.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\obj\bf7006amxx_timer.d --cpu=Cortex-M0 --apcs=interwork -Otime --diag_suppress=9931 -I.\src\pt -I.\src -I.\config -I.\RTE\CMSIS\BF7006AM64 -I.\RTE\Device\BF7006AM64 -I.\RTE\SEGGER -I.\RTE\Startup\BF7006AM64 -I.\RTE\_b40 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\BYD\BYDMicro_DFP\1.1.0\Device\Include\BF7006AMxx -D__UVISION_VERSION=536 -D_RTE_ -D_RTE_ --omf_browse=.\obj\bf7006amxx_timer.crf RTE\Device\BF7006AM64\BF7006AMxx_timer.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  timer_init PROC
;;;22     */
;;;23     void timer_init(uint32_t timerx,uint8_t timer_cfg,uint16_t timer_mod)
000000  b410              PUSH     {r4}
;;;24     {
;;;25     	TIMER_CFG(timerx) = timer_cfg;
000002  6001              STR      r1,[r0,#0]
;;;26     	TIMER_MOD(timerx) = timer_mod;
000004  6042              STR      r2,[r0,#4]
;;;27     	if(timerx == (uint32_t)TIMER0){
000006  4c18              LDR      r4,|L1.104|
000008  4a18              LDR      r2,|L1.108|
00000a  4b19              LDR      r3,|L1.112|
00000c  42a0              CMP      r0,r4
00000e  d10c              BNE      |L1.42|
000010  4818              LDR      r0,|L1.116|
;;;28     		if((timer_cfg & TIMER_CFG_IE) != 0U){
000012  0689              LSLS     r1,r1,#26
000014  d502              BPL      |L1.28|
                  |L1.22|
000016  6010              STR      r0,[r2,#0]
;;;29     			NVIC_EnableIRQ(TIMER0_IRQn);
;;;30     		}else{
;;;31     			NVIC_DisableIRQ(TIMER0_IRQn);
;;;32     		}
;;;33     	}else{
;;;34     		if((timer_cfg & TIMER_CFG_IE) != 0U){
;;;35     			NVIC_EnableIRQ(TIMER1_IRQn);
;;;36     		}else{
;;;37     			NVIC_DisableIRQ(TIMER1_IRQn);
;;;38     		}
;;;39     	}
;;;40     }
000018  bc10              POP      {r4}
00001a  4770              BX       lr
                  |L1.28|
00001c  6018              STR      r0,[r3,#0]
00001e  f3bf8f4f          DSB      
000022  f3bf8f6f          ISB      
000026  bc10              POP      {r4}
000028  4770              BX       lr
                  |L1.42|
00002a  4813              LDR      r0,|L1.120|
00002c  0689              LSLS     r1,r1,#26             ;34
00002e  d5f5              BPL      |L1.28|
000030  e7f1              B        |L1.22|
;;;41     
                          ENDP

                  timer_enable PROC
;;;48     */
;;;49     void timer_enable(uint32_t timerx)
000032  6801              LDR      r1,[r0,#0]
;;;50     {
;;;51     	TIMER_CFG(timerx) |= TIMER_CFG_EN;
000034  2201              MOVS     r2,#1
000036  4311              ORRS     r1,r1,r2
000038  6001              STR      r1,[r0,#0]
;;;52     }
00003a  4770              BX       lr
;;;53     
                          ENDP

                  timer_disable PROC
;;;59     */
;;;60     void timer_disable(uint32_t timerx)
00003c  6801              LDR      r1,[r0,#0]
;;;61     {
;;;62     	TIMER_CFG(timerx) &= ~TIMER_CFG_EN;
00003e  0849              LSRS     r1,r1,#1
000040  0049              LSLS     r1,r1,#1
000042  6001              STR      r1,[r0,#0]
;;;63     }
000044  4770              BX       lr
;;;64     
                          ENDP

                  timer_mod_set PROC
;;;71     */
;;;72     void timer_mod_set(uint32_t timerx,uint16_t count)
000046  6041              STR      r1,[r0,#4]
;;;73     {
;;;74     	TIMER_MOD(timerx) = count;
;;;75     }
000048  4770              BX       lr
;;;76     
                          ENDP

                  timer_cnt_get PROC
;;;82     */
;;;83     uint16_t timer_cnt_get(uint32_t timerx)
00004a  6880              LDR      r0,[r0,#8]
;;;84     {
;;;85     	return TIMER_CNT(timerx);
00004c  b280              UXTH     r0,r0
;;;86     }
00004e  4770              BX       lr
;;;87     
                          ENDP

                  timer_intflag_clr PROC
;;;93     */
;;;94     void timer_intflag_clr(uint32_t timerx)
000050  6801              LDR      r1,[r0,#0]
;;;95     {
;;;96     	TIMER_CFG(timerx) |= TIMER_CFG_IF;
000052  2240              MOVS     r2,#0x40
000054  4311              ORRS     r1,r1,r2
000056  6001              STR      r1,[r0,#0]
;;;97     }
000058  4770              BX       lr
;;;98     
                          ENDP

                  timer_intflag_get PROC
;;;104    */
;;;105    FlagStatus timer_intflag_get(uint32_t timerx)
00005a  6800              LDR      r0,[r0,#0]
;;;106    {
;;;107    	uint32_t intflag = TIMER_CFG(timerx);
;;;108    	if((intflag & TIMER_CFG_IF) != 0x00U ){
00005c  0640              LSLS     r0,r0,#25
00005e  d501              BPL      |L1.100|
;;;109    		return SET;
000060  2001              MOVS     r0,#1
;;;110    	}else{
;;;111    		return RESET;
;;;112    	}
;;;113    } 
000062  4770              BX       lr
                  |L1.100|
000064  2000              MOVS     r0,#0                 ;111
000066  4770              BX       lr
                          ENDP

                  |L1.104|
                          DCD      0x500b0000
                  |L1.108|
                          DCD      0xe000e100
                  |L1.112|
                          DCD      0xe000e180
                  |L1.116|
                          DCD      0x40000000
                  |L1.120|
                          DCD      0x80000000

;*** Start embedded assembler ***

#line 1 "RTE\\Device\\BF7006AM64\\BF7006AMxx_timer.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___18_BF7006AMxx_timer_c_651163fb____REV16|
#line 447 ".\\RTE\\CMSIS\\BF7006AM64\\cmsis_armcc.h"
|__asm___18_BF7006AMxx_timer_c_651163fb____REV16| PROC
#line 448

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___18_BF7006AMxx_timer_c_651163fb____REVSH|
#line 462
|__asm___18_BF7006AMxx_timer_c_651163fb____REVSH| PROC
#line 463

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
