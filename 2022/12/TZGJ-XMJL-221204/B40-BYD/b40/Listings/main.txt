; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--list --debug -c --asm --interleave --gnu -o.\obj\main.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\obj\main.d --cpu=Cortex-M0 --apcs=interwork -Otime --diag_suppress=9931 -I.\src\pt -I.\src -I.\config -I.\RTE\CMSIS\BF7006AM64 -I.\RTE\Device\BF7006AM64 -I.\RTE\SEGGER -I.\RTE\Startup\BF7006AM64 -I.\RTE\_b40 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\BYD\BYDMicro_DFP\1.1.0\Device\Include\BF7006AMxx -D__UVISION_VERSION=536 -D_RTE_ -D_RTE_ --omf_browse=.\obj\main.crf src\main.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  din_app PROC
;;;16     
;;;17     __weak void din_app(){}
000000  4770              BX       lr
;;;18     __weak void ain_app(){}
                          ENDP

                  ain_app PROC
000002  4770              BX       lr
;;;19     __weak void rain(){}
                          ENDP

                  rain PROC
000004  4770              BX       lr
;;;20     __weak void power_out(){}
                          ENDP

                  power_out PROC
000006  4770              BX       lr
;;;21     __weak void power_app(){}
                          ENDP

                  power_app PROC
000008  4770              BX       lr
;;;22     __weak void pluse_app(){}
                          ENDP

                  pluse_app PROC
00000a  4770              BX       lr
;;;23     __weak void can_app(){}
                          ENDP

                  can_app PROC
00000c  4770              BX       lr
;;;24     __weak void canhl_loop(){}
                          ENDP

                  canhl_loop PROC
00000e  4770              BX       lr
;;;25     __weak void logic_app(){}
                          ENDP

                  logic_app PROC
000010  4770              BX       lr
;;;26     __weak void logic3_app(){}
                          ENDP

                  logic3_app PROC
000012  4770              BX       lr
;;;27     	
                          ENDP

                  main PROC
;;;30     	
;;;31     int main (void)
000014  f7fffffe          BL       auto_init
                  |L1.24|
;;;32     {
;;;33     	#ifdef DEBUG
;;;34         SEGGER_RTT_Init();
;;;35     	#endif
;;;36     	
;;;37         #ifdef MAIN_TEST
;;;38         SysTick_Config (0xFFFFFF);
;;;39         SysTick->VAL = 0XFFFFFF;
;;;40         #endif
;;;41     	
;;;42     		auto_init();
;;;43     	
;;;44         /* Place your initialization code below */
;;;45     
;;;46         #ifdef MAIN_TEST
;;;47         SysTick->VAL = 0XFFFFFF;
;;;48         #endif
;;;49     	
;;;50         while (1)
;;;51         {
;;;52             /* Place your code here */
;;;53     				din_app();
000018  f7fffffe          BL       din_app
;;;54     				ain_app();
00001c  f7fffffe          BL       ain_app
;;;55     				rain();
000020  f7fffffe          BL       rain
;;;56     				power_out();
000024  f7fffffe          BL       power_out
;;;57     				power_app();
000028  f7fffffe          BL       power_app
;;;58     				pluse_app();
00002c  f7fffffe          BL       pluse_app
;;;59     				can_app();
000030  f7fffffe          BL       can_app
;;;60     				canhl_loop();
000034  f7fffffe          BL       canhl_loop
;;;61     				logic_app();
000038  f7fffffe          BL       logic_app
;;;62     				logic3_app();
00003c  f7fffffe          BL       logic3_app
000040  e7ea              B        |L1.24|
;;;63     			
;;;64     			#ifdef DEBUG
;;;65     				auto_loop();			  
;;;66     			#endif
;;;67     	
;;;68             #ifdef MAIN_TEST
;;;69             {
;;;70                 //测试大约18KHz的运行周期，最大-最小18.8K-13K，0.1ms肯定运行一次，所以PWM采用的10K比较合适
;;;71     						//测试效率：普通模式，平均运行一次时间2027，打开ONS选项 2065 ； PT模式，平均运行一次时间2106，打开ONS选项后2150
;;;72     						//优化之后约2076
;;;73     						//增加80个指令周期
;;;74     						//约15.2K,最小周期8.47KHz
;;;75     						//17.5K-5K
;;;76                 static uint32_t test = 0;
;;;77                 static uint32_t min = 0xFFFFFFFF;
;;;78                 static uint32_t sum = 0;
;;;79                 static uint32_t max = 0;
;;;80                 uint32_t time;
;;;81     
;;;82                 test++;
;;;83     
;;;84                 time = 0XFFFFFF - SysTick->VAL;
;;;85     
;;;86                 min = min > time ? time : min;
;;;87                 max = max > time ? max : time;
;;;88     
;;;89                 sum += time;
;;;90     
;;;91                 if ((test & 0x7FF) == 1)
;;;92                 {
;;;93                     SEGGER_RTT_printf (0, "sum .1/32M %d,%d,%d\n", sum / test, min, max);
;;;94                     min = 0xFFFFFFFF;
;;;95                     max = 0;
;;;96                     if (sum > 0xF0000000)
;;;97                     {
;;;98                         sum = 0;
;;;99                         test = 0;
;;;100                    }
;;;101                }
;;;102    
;;;103                SysTick->VAL = 0XFFFFFF;
;;;104            }
;;;105            #endif
;;;106        }
;;;107    
;;;108    }
;;;109    
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  systick_ms
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "src\\main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_fbfd3ec4____REV16|
#line 447 ".\\RTE\\CMSIS\\BF7006AM64\\cmsis_armcc.h"
|__asm___6_main_c_fbfd3ec4____REV16| PROC
#line 448

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_fbfd3ec4____REVSH|
#line 462
|__asm___6_main_c_fbfd3ec4____REVSH| PROC
#line 463

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
