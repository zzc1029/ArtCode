; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--list --debug -c --asm --interleave --gnu -o.\obj\pluse.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\obj\pluse.d --cpu=Cortex-M0 --apcs=interwork -Otime --diag_suppress=9931 -I.\src\pt -I.\src -I.\config -I.\RTE\CMSIS\BF7006AM64 -I.\RTE\Device\BF7006AM64 -I.\RTE\SEGGER -I.\RTE\Startup\BF7006AM64 -I.\RTE\_b40 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\BYD\BYDMicro_DFP\1.1.0\Device\Include\BF7006AMxx -D__UVISION_VERSION=536 -D_RTE_ -D_RTE_ --omf_browse=.\obj\pluse.crf src\pluse.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  protothread_pluse PROC
;;;31     
;;;32     static int protothread_pluse (struct pt *pt)
000000  b5f8              PUSH     {r3-r7,lr}
;;;33     {
000002  4604              MOV      r4,r0
;;;34         PT_BEGIN (pt);
000004  6800              LDR      r0,[r0,#0]
000006  2600              MOVS     r6,#0
;;;35     
;;;36         static uint16_t pluse_temp = 0;
;;;37         static struct pt ptx;
;;;38     
;;;39     
;;;40         /* We loop forever here. */
;;;41         while (1)
;;;42         {
;;;43             PT_WAIT_UNTIL (pt, (pluse_flag > 0));
000008  4d34              LDR      r5,|L1.220|
00000a  2800              CMP      r0,#0                 ;34
00000c  d000              BEQ      |L1.16|
00000e  4700              BX       r0                    ;34
                  |L1.16|
                  LC_LABEL43
000010  4833              LDR      r0,|L1.224|
000012  6020              STR      r0,[r4,#0]
000014  7828              LDRB     r0,[r5,#0]  ; pluse_flag
000016  2800              CMP      r0,#0
000018  d053              BEQ      |L1.194|
00001a  2101              MOVS     r1,#1
00001c  4831              LDR      r0,|L1.228|
;;;44             pluse_flag = 0;
00001e  702e              STRB     r6,[r5,#0]
000020  0649              LSLS     r1,r1,#25
000022  6001              STR      r1,[r0,#0]
000024  f3bf8f4f          DSB      
000028  f3bf8f6f          ISB      
;;;45     
;;;46             {
;;;47                 uint16_t temp;
;;;48                 NVIC_DisableIRQ (RTC_IRQn);
;;;49                 temp = pluse_100ms;
00002c  88a8              LDRH     r0,[r5,#4]  ; pluse_100ms
00002e  4a2e              LDR      r2,|L1.232|
;;;50                 pluse_100ms = 0;
000030  80ae              STRH     r6,[r5,#4]
000032  6011              STR      r1,[r2,#0]
;;;51                 NVIC_EnableIRQ (RTC_IRQn);
;;;52                 pluse_temp += temp;
000034  8929              LDRH     r1,[r5,#8]  ; pluse_temp
000036  1809              ADDS     r1,r1,r0
000038  b289              UXTH     r1,r1
00003a  8129              STRH     r1,[r5,#8]
00003c  9100              STR      r1,[sp,#0]
00003e  7869              LDRB     r1,[r5,#1]  ; i
000040  2909              CMP      r1,#9
000042  d301              BCC      |L1.72|
000044  2200              MOVS     r2,#0
000046  e002              B        |L1.78|
                  |L1.72|
000048  1c49              ADDS     r1,r1,#1
00004a  b2ca              UXTB     r2,r1
00004c  706a              STRB     r2,[r5,#1]
                  |L1.78|
00004e  706a              STRB     r2,[r5,#1]
000050  78a9              LDRB     r1,[r5,#2]  ; j
000052  290a              CMP      r1,#0xa
000054  d202              BCS      |L1.92|
000056  1c49              ADDS     r1,r1,#1
000058  b2c9              UXTB     r1,r1
00005a  70a9              STRB     r1,[r5,#2]
                  |L1.92|
00005c  70a9              STRB     r1,[r5,#2]
00005e  468c              MOV      r12,r1
000060  4922              LDR      r1,|L1.236|
000062  0052              LSLS     r2,r2,#1
000064  5a8b              LDRH     r3,[r1,r2]
000066  88ef              LDRH     r7,[r5,#6]  ; sum
000068  5288              STRH     r0,[r1,r2]
00006a  1afb              SUBS     r3,r7,r3
00006c  18c0              ADDS     r0,r0,r3
00006e  b280              UXTH     r0,r0
000070  80e8              STRH     r0,[r5,#6]
000072  210a              MOVS     r1,#0xa
000074  4348              MULS     r0,r1,r0
000076  4661              MOV      r1,r12
000078  f7fffffe          BL       __aeabi_uidivmod
;;;53                 freq = CaclFreq (temp);
00007c  81a8              STRH     r0,[r5,#0xc]
;;;54             }
;;;55     
;;;56             {
;;;57                 uint8_t temp_100m = pluse_temp / param.pluse;
00007e  481c              LDR      r0,|L1.240|
000080  8801              LDRH     r1,[r0,#0]  ; param
000082  9800              LDR      r0,[sp,#0]
000084  f7fffffe          BL       __aeabi_uidivmod
;;;58                 pluse_temp %= param.pluse;
000088  8129              STRH     r1,[r5,#8]
;;;59     
;;;60                 trip_100m += temp_100m;
00008a  8969              LDRH     r1,[r5,#0xa]  ; trip_100m
00008c  b2c0              UXTB     r0,r0                 ;57
00008e  1809              ADDS     r1,r1,r0
000090  8169              STRH     r1,[r5,#0xa]
;;;61                 odo_100m += temp_100m;
000092  6969              LDR      r1,[r5,#0x14]  ; odo_100m
000094  1808              ADDS     r0,r1,r0
;;;62     
;;;63                 if (last_odo_100m < odo_100m)
000096  6168              STR      r0,[r5,#0x14]  ; odo_100m
000098  69a9              LDR      r1,[r5,#0x18]  ; last_odo_100m
00009a  4281              CMP      r1,r0
00009c  d2b8              BCS      |L1.16|
                  LC_LABEL65
;;;64                 {
;;;65                     PT_WAIT_UNTIL (pt, (EepromFlag == 0));
00009e  4815              LDR      r0,|L1.244|
0000a0  6020              STR      r0,[r4,#0]
0000a2  4815              LDR      r0,|L1.248|
0000a4  6801              LDR      r1,[r0,#0]  ; EepromFlag
0000a6  2900              CMP      r1,#0
0000a8  d10a              BNE      |L1.192|
;;;66                     EepromFlag = 1;
0000aa  2101              MOVS     r1,#1
;;;67                     PT_SPAWN (pt, &ptx, save_odo_pt (&ptx));
0000ac  6001              STR      r1,[r0,#0]  ; EepromFlag
0000ae  4813              LDR      r0,|L1.252|
0000b0  6006              STR      r6,[r0,#0]  ; ptx
                  LC_LABEL67
0000b2  4813              LDR      r0,|L1.256|
0000b4  6020              STR      r0,[r4,#0]
0000b6  4811              LDR      r0,|L1.252|
0000b8  f7fffffe          BL       save_odo_pt
0000bc  2802              CMP      r0,#2
0000be  da01              BGE      |L1.196|
                  |L1.192|
0000c0  2000              MOVS     r0,#0
                  |L1.194|
;;;68                     EepromFlag = 0;
;;;69     
;;;70                     last_odo_100m = odo_100m + 10;
;;;71                 }
;;;72                 #ifdef PLUSE_DEBUG
;;;73                 SEGGER_RTT_TerminalPrintf (0, "trip_100m:%d, Freq:%d \n", trip_100m, freq);
;;;74                 #endif
;;;75             }
;;;76     
;;;77             /* And we loop. */
;;;78         }
;;;79         PT_INFINITE_LOOP_END (pt);
;;;80     }
0000c2  bdf8              POP      {r3-r7,pc}
                  |L1.196|
0000c4  480c              LDR      r0,|L1.248|
0000c6  6006              STR      r6,[r0,#0]            ;70  ; EepromFlag
0000c8  6968              LDR      r0,[r5,#0x14]         ;70  ; odo_100m
0000ca  300a              ADDS     r0,r0,#0xa            ;70
0000cc  61a8              STR      r0,[r5,#0x18]         ;70  ; last_odo_100m
0000ce  e79f              B        |L1.16|
;;;81     
                          ENDP

                  pluse_init PROC
;;;108    static struct pt pt1;
;;;109    static void pluse_init()
0000d0  490c              LDR      r1,|L1.260|
;;;110    {
;;;111        PT_INIT (&pt1);
0000d2  2000              MOVS     r0,#0
0000d4  6008              STR      r0,[r1,#0]  ; pt1
;;;112        #ifdef PLUSE_TEST
;;;113        PT_INIT (&pt_test);
;;;114        #endif
;;;115    }
0000d6  4770              BX       lr
;;;116    INIT_COMPONENT_EXPORT(pluse_init);
                          ENDP

                  pluse_app PROC
;;;117    
;;;118    void pluse_app()
0000d8  480a              LDR      r0,|L1.260|
;;;119    {
;;;120        protothread_pluse (&pt1);
0000da  e7fe              B        protothread_pluse
;;;121        #ifdef PLUSE_TEST
;;;122        protothread_pluse_test (&pt_test);
;;;123        #endif
;;;124    }
;;;125    //INIT_APP_LOOP_EXPORT(pluse_app);
                          ENDP

                  |L1.220|
                          DCD      ||area_number.6||
                  |L1.224|
                          DCD      LC_LABEL43
                  |L1.228|
                          DCD      0xe000e180
                  |L1.232|
                          DCD      0xe000e100
                  |L1.236|
                          DCD      ||.bss||
                  |L1.240|
                          DCD      param
                  |L1.244|
                          DCD      LC_LABEL65
                  |L1.248|
                          DCD      EepromFlag
                  |L1.252|
                          DCD      ||area_number.6||+0x10
                  |L1.256|
                          DCD      LC_LABEL67
                  |L1.260|
                          DCD      ||area_number.6||+0x1c

                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  buffer
                          %        20

                          AREA ||.data||, DATA, ALIGN=1

                  pluse_count
000000  0000              DCW      0x0000

                          AREA ||area_number.6||, DATA, ALIGN=2

                          EXPORTAS ||area_number.6||, ||.data||
                  pluse_flag
000000  00                DCB      0x00
                  i
000001  00                DCB      0x00
                  j
000002  0000              DCB      0x00,0x00
                  pluse_100ms
000004  0000              DCW      0x0000
                  ||sum||
000006  0000              DCW      0x0000
                  pluse_temp
000008  0000              DCW      0x0000
                  trip_100m
00000a  0000              DCB      0x00,0x00
                  freq
00000c  00000000          DCB      0x00,0x00,0x00,0x00
                  ptx
                          DCD      0x00000000
                  odo_100m
                          DCD      0x00000000
                  last_odo_100m
                          DCD      0x00000000
                  pt1
                          DCD      0x00000000

                          AREA ||.init_fn.4||, DATA, READONLY, ALIGN=2

                  __stan_init_pluse_init
                  ||__tagsym$$used||
                          DCD      pluse_init

;*** Start embedded assembler ***

#line 1 "src\\pluse.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_pluse_c_a1387d17____REV16|
#line 447 ".\\RTE\\CMSIS\\BF7006AM64\\cmsis_armcc.h"
|__asm___7_pluse_c_a1387d17____REV16| PROC
#line 448

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_pluse_c_a1387d17____REVSH|
#line 462
|__asm___7_pluse_c_a1387d17____REVSH| PROC
#line 463

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
