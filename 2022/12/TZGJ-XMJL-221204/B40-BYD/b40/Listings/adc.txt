; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--list --debug -c --asm --interleave --gnu -o.\obj\adc.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\obj\adc.d --cpu=Cortex-M0 --apcs=interwork -Otime --diag_suppress=9931 -I.\src\pt -I.\src -I.\config -I.\RTE\CMSIS\BF7006AM64 -I.\RTE\Device\BF7006AM64 -I.\RTE\SEGGER -I.\RTE\Startup\BF7006AM64 -I.\RTE\_b40 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\BYD\BYDMicro_DFP\1.1.0\Device\Include\BF7006AMxx -D__UVISION_VERSION=536 -D_RTE_ -D_RTE_ --omf_browse=.\obj\adc.crf src\adc.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  avargeF PROC
;;;33     
;;;34     AVARGE_FUNC (F, 5);
000000  b570              PUSH     {r4-r6,lr}
000002  4b7f              LDR      r3,|L1.512|
000004  4d7f              LDR      r5,|L1.516|
000006  7819              LDRB     r1,[r3,#0]  ; count
000008  689e              LDR      r6,[r3,#8]  ; sum
00000a  06ca              LSLS     r2,r1,#27
00000c  0e92              LSRS     r2,r2,#26
00000e  5aac              LDRH     r4,[r5,r2]
000010  52a8              STRH     r0,[r5,r2]
000012  1b34              SUBS     r4,r6,r4
000014  1820              ADDS     r0,r4,r0
000016  1c49              ADDS     r1,r1,#1
000018  6098              STR      r0,[r3,#8]  ; sum
00001a  7019              STRB     r1,[r3,#0]
00001c  7859              LDRB     r1,[r3,#1]  ; first
00001e  2920              CMP      r1,#0x20
000020  d206              BCS      |L1.48|
000022  1c49              ADDS     r1,r1,#1
000024  b2c9              UXTB     r1,r1
000026  7059              STRB     r1,[r3,#1]
000028  f7fffffe          BL       __aeabi_uidivmod
00002c  b280              UXTH     r0,r0
00002e  bd70              POP      {r4-r6,pc}
                  |L1.48|
000030  02c0              LSLS     r0,r0,#11
000032  0c00              LSRS     r0,r0,#16
000034  bd70              POP      {r4-r6,pc}
;;;35     AVARGE_FUNC (G, 5);
                          ENDP

                  avargeG PROC
000036  b570              PUSH     {r4-r6,lr}
000038  4b71              LDR      r3,|L1.512|
00003a  4d73              LDR      r5,|L1.520|
00003c  7899              LDRB     r1,[r3,#2]  ; count
00003e  68de              LDR      r6,[r3,#0xc]  ; sum
000040  06ca              LSLS     r2,r1,#27
000042  0e92              LSRS     r2,r2,#26
000044  5aac              LDRH     r4,[r5,r2]
000046  52a8              STRH     r0,[r5,r2]
000048  1b34              SUBS     r4,r6,r4
00004a  1820              ADDS     r0,r4,r0
00004c  1c49              ADDS     r1,r1,#1
00004e  60d8              STR      r0,[r3,#0xc]  ; sum
000050  7099              STRB     r1,[r3,#2]
000052  78d9              LDRB     r1,[r3,#3]  ; first
000054  2920              CMP      r1,#0x20
000056  d206              BCS      |L1.102|
000058  1c49              ADDS     r1,r1,#1
00005a  b2c9              UXTB     r1,r1
00005c  70d9              STRB     r1,[r3,#3]
00005e  f7fffffe          BL       __aeabi_uidivmod
000062  b280              UXTH     r0,r0
000064  bd70              POP      {r4-r6,pc}
                  |L1.102|
000066  02c0              LSLS     r0,r0,#11
000068  0c00              LSRS     r0,r0,#16
00006a  bd70              POP      {r4-r6,pc}
;;;36     		
                          ENDP

                  protothread_adc PROC
;;;46     
;;;47     int protothread_adc (struct pt *pt)
00006c  b5f8              PUSH     {r3-r7,lr}
;;;48     {
00006e  4604              MOV      r4,r0
;;;49         uint32_t ad;
;;;50         PT_BEGIN (pt);
000070  6800              LDR      r0,[r0,#0]
;;;51     
;;;52         static uint32_t time;
;;;53         static uint32_t time1;
;;;54         static int i = 0;
;;;55     
;;;56         /* We loop forever here. */
;;;57         while (1)
;;;58         {
;;;59             time1 = systick_ms + 50;
000072  4e66              LDR      r6,|L1.524|
000074  4d62              LDR      r5,|L1.512|
000076  2800              CMP      r0,#0                 ;50
000078  d000              BEQ      |L1.124|
00007a  4700              BX       r0                    ;50
                  |L1.124|
00007c  6830              LDR      r0,[r6,#0]  ; systick_ms
00007e  3032              ADDS     r0,r0,#0x32
;;;60             for (i = 0; i < POUT_COUNT; i++)
000080  6168              STR      r0,[r5,#0x14]  ; time1
000082  2000              MOVS     r0,#0
000084  61a8              STR      r0,[r5,#0x18]  ; i
                  |L1.134|
;;;61             {
;;;62                 PT_DELAY_MS (pt, 1);
000086  6830              LDR      r0,[r6,#0]  ; systick_ms
000088  1c40              ADDS     r0,r0,#1
00008a  6128              STR      r0,[r5,#0x10]  ; time
                  LC_LABEL62
00008c  4860              LDR      r0,|L1.528|
00008e  6020              STR      r0,[r4,#0]
000090  6830              LDR      r0,[r6,#0]  ; systick_ms
000092  6929              LDR      r1,[r5,#0x10]  ; time
000094  1a40              SUBS     r0,r0,r1
000096  d47d              BMI      |L1.404|
;;;63                 adc_start_convert (PoutS[i].adc_ch);
000098  69a8              LDR      r0,[r5,#0x18]  ; i
00009a  2134              MOVS     r1,#0x34
00009c  4348              MULS     r0,r1,r0
00009e  495d              LDR      r1,|L1.532|
0000a0  1840              ADDS     r0,r0,r1
0000a2  3020              ADDS     r0,r0,#0x20
0000a4  7a40              LDRB     r0,[r0,#9]
0000a6  f7fffffe          BL       adc_start_convert
;;;64                 PT_DELAY_MS (pt, 1);
0000aa  6830              LDR      r0,[r6,#0]  ; systick_ms
0000ac  1c40              ADDS     r0,r0,#1
0000ae  6128              STR      r0,[r5,#0x10]  ; time
                  LC_LABEL64
0000b0  4859              LDR      r0,|L1.536|
0000b2  6020              STR      r0,[r4,#0]
0000b4  6830              LDR      r0,[r6,#0]  ; systick_ms
0000b6  6929              LDR      r1,[r5,#0x10]  ; time
0000b8  1a40              SUBS     r0,r0,r1
0000ba  d46b              BMI      |L1.404|
;;;65                 //ad = avages[i](adc_data_get());
;;;66     						{
;;;67     							extern void GetCurAndErr(uint16_t index, uint16_t adc);
;;;68     							GetCurAndErr(i, adc_data_get());	
0000bc  f7fffffe          BL       adc_data_get
0000c0  4601              MOV      r1,r0
0000c2  8b28              LDRH     r0,[r5,#0x18]  ; i
0000c4  b280              UXTH     r0,r0
0000c6  f7fffffe          BL       GetCurAndErr
0000ca  69a8              LDR      r0,[r5,#0x18]         ;60  ; i
0000cc  1c40              ADDS     r0,r0,#1              ;60
0000ce  61a8              STR      r0,[r5,#0x18]         ;60  ; i
0000d0  280f              CMP      r0,#0xf               ;60
0000d2  dbd8              BLT      |L1.134|
;;;69     						}				
;;;70                 //PoutS[i].cur_100ma = (PoutS[i].cur_100ma >> 3) + ((((adc_data_get() * PoutS[i].magic) >> 23) * 7) >> 3); //a = 0.875					
;;;71             }
;;;72     				
;;;73             // ad r1
;;;74             PT_DELAY_MS (pt, 1);
0000d4  6830              LDR      r0,[r6,#0]  ; systick_ms
0000d6  1c40              ADDS     r0,r0,#1
0000d8  6128              STR      r0,[r5,#0x10]  ; time
                  LC_LABEL74
0000da  4850              LDR      r0,|L1.540|
0000dc  6020              STR      r0,[r4,#0]
0000de  6830              LDR      r0,[r6,#0]  ; systick_ms
0000e0  6929              LDR      r1,[r5,#0x10]  ; time
0000e2  1a40              SUBS     r0,r0,r1
0000e4  d47f              BMI      |L1.486|
;;;75             adc_start_convert (22);
0000e6  2016              MOVS     r0,#0x16
0000e8  f7fffffe          BL       adc_start_convert
;;;76             PT_DELAY_MS (pt, 1);
0000ec  6830              LDR      r0,[r6,#0]  ; systick_ms
0000ee  1c40              ADDS     r0,r0,#1
0000f0  6128              STR      r0,[r5,#0x10]  ; time
                  LC_LABEL76
0000f2  484b              LDR      r0,|L1.544|
0000f4  6020              STR      r0,[r4,#0]
0000f6  6830              LDR      r0,[r6,#0]  ; systick_ms
0000f8  6929              LDR      r1,[r5,#0x10]  ; time
0000fa  1a40              SUBS     r0,r0,r1
0000fc  d473              BMI      |L1.486|
;;;77     
;;;78             ad = avarge (F, adc_data_get());
0000fe  f7fffffe          BL       adc_data_get
000102  782a              LDRB     r2,[r5,#0]  ; count
000104  4601              MOV      r1,r0
000106  4694              MOV      r12,r2
000108  06d0              LSLS     r0,r2,#27
00010a  4a3e              LDR      r2,|L1.516|
00010c  0e80              LSRS     r0,r0,#26
00010e  5a13              LDRH     r3,[r2,r0]
000110  68af              LDR      r7,[r5,#8]  ; sum
000112  5211              STRH     r1,[r2,r0]
000114  1afb              SUBS     r3,r7,r3
000116  1858              ADDS     r0,r3,r1
000118  4662              MOV      r2,r12
00011a  1c52              ADDS     r2,r2,#1
00011c  60a8              STR      r0,[r5,#8]  ; sum
00011e  702a              STRB     r2,[r5,#0]
000120  7869              LDRB     r1,[r5,#1]  ; first
000122  2920              CMP      r1,#0x20
000124  d206              BCS      |L1.308|
000126  1c49              ADDS     r1,r1,#1
000128  b2c9              UXTB     r1,r1
00012a  7069              STRB     r1,[r5,#1]
00012c  f7fffffe          BL       __aeabi_uidivmod
000130  b280              UXTH     r0,r0
000132  e001              B        |L1.312|
                  |L1.308|
000134  02c0              LSLS     r0,r0,#11
000136  0c00              LSRS     r0,r0,#16
                  |L1.312|
;;;79             #if (defined SENSE_SER1_P25_SET) && (SENSE_SER1_P25_SET > 0)
;;;80             if (ad > 3511)
000138  493a              LDR      r1,|L1.548|
00013a  4288              CMP      r0,r1
00013c  d901              BLS      |L1.322|
;;;81             {
;;;82                 P25 = 6 * SENSE_SER1_P25_SET;
00013e  483a              LDR      r0,|L1.552|
000140  e007              B        |L1.338|
                  |L1.322|
;;;83             }
;;;84             else
;;;85             {
;;;86                 P25 = ad * SENSE_SER1_P25_SET / (4096 - ad);    // unit is oumu
000142  2101              MOVS     r1,#1
000144  0309              LSLS     r1,r1,#12
000146  227d              MOVS     r2,#0x7d
000148  1a09              SUBS     r1,r1,r0
00014a  00d2              LSLS     r2,r2,#3
00014c  4350              MULS     r0,r2,r0
00014e  f7fffffe          BL       __aeabi_uidivmod
                  |L1.338|
000152  80a8              STRH     r0,[r5,#4]
;;;87             }
;;;88             #else
;;;89             //P25 = (ad * 5000) >> 12; //unit is mV  //4096*5000
;;;90             P25 = (ad * 500) >> 12; //unit is 10mV  //4096*5000
;;;91             #endif
;;;92     
;;;93             // ad r2
;;;94             PT_DELAY_MS (pt, 1);
000154  6830              LDR      r0,[r6,#0]  ; systick_ms
000156  1c40              ADDS     r0,r0,#1
000158  6128              STR      r0,[r5,#0x10]  ; time
                  LC_LABEL94
00015a  4834              LDR      r0,|L1.556|
00015c  6020              STR      r0,[r4,#0]
00015e  6830              LDR      r0,[r6,#0]  ; systick_ms
000160  6929              LDR      r1,[r5,#0x10]  ; time
000162  1a40              SUBS     r0,r0,r1
000164  d43f              BMI      |L1.486|
;;;95             adc_start_convert (15);
000166  200f              MOVS     r0,#0xf
000168  f7fffffe          BL       adc_start_convert
;;;96             PT_DELAY_MS (pt, 1);
00016c  6830              LDR      r0,[r6,#0]  ; systick_ms
00016e  1c40              ADDS     r0,r0,#1
000170  6128              STR      r0,[r5,#0x10]  ; time
                  LC_LABEL96
000172  482f              LDR      r0,|L1.560|
000174  6020              STR      r0,[r4,#0]
000176  6830              LDR      r0,[r6,#0]  ; systick_ms
000178  6929              LDR      r1,[r5,#0x10]  ; time
00017a  1a40              SUBS     r0,r0,r1
00017c  d433              BMI      |L1.486|
;;;97     
;;;98             ad = avarge (G, adc_data_get());
00017e  f7fffffe          BL       adc_data_get
000182  78aa              LDRB     r2,[r5,#2]  ; count
000184  4601              MOV      r1,r0
000186  4694              MOV      r12,r2
000188  06d0              LSLS     r0,r2,#27
00018a  4a1f              LDR      r2,|L1.520|
00018c  0e80              LSRS     r0,r0,#26
00018e  5a13              LDRH     r3,[r2,r0]
000190  68ef              LDR      r7,[r5,#0xc]  ; sum
000192  e000              B        |L1.406|
                  |L1.404|
000194  e027              B        |L1.486|
                  |L1.406|
000196  5211              STRH     r1,[r2,r0]
000198  1afb              SUBS     r3,r7,r3
00019a  1858              ADDS     r0,r3,r1
00019c  4662              MOV      r2,r12
00019e  1c52              ADDS     r2,r2,#1
0001a0  60e8              STR      r0,[r5,#0xc]  ; sum
0001a2  70aa              STRB     r2,[r5,#2]
0001a4  78e9              LDRB     r1,[r5,#3]  ; first
0001a6  2920              CMP      r1,#0x20
0001a8  d206              BCS      |L1.440|
0001aa  1c49              ADDS     r1,r1,#1
0001ac  b2c9              UXTB     r1,r1
0001ae  70e9              STRB     r1,[r5,#3]
0001b0  f7fffffe          BL       __aeabi_uidivmod
0001b4  b280              UXTH     r0,r0
0001b6  e001              B        |L1.444|
                  |L1.440|
0001b8  02c0              LSLS     r0,r0,#11
0001ba  0c00              LSRS     r0,r0,#16
                  |L1.444|
;;;99             #if (defined SENSE_SER2_P40_SET) && (SENSE_SER2_P40_SET > 0)
;;;100            if (ad > 3511)
0001bc  4919              LDR      r1,|L1.548|
0001be  4288              CMP      r0,r1
0001c0  d901              BLS      |L1.454|
;;;101            {
;;;102                P40 = 6 * SENSE_SER2_P40_SET;
0001c2  4819              LDR      r0,|L1.552|
0001c4  e007              B        |L1.470|
                  |L1.454|
;;;103            }
;;;104            else
;;;105            {
;;;106                P40 = ad * SENSE_SER2_P40_SET / (4096 - ad);    // unit is oumu
0001c6  2101              MOVS     r1,#1
0001c8  0309              LSLS     r1,r1,#12
0001ca  227d              MOVS     r2,#0x7d
0001cc  1a09              SUBS     r1,r1,r0
0001ce  00d2              LSLS     r2,r2,#3
0001d0  4350              MULS     r0,r2,r0
0001d2  f7fffffe          BL       __aeabi_uidivmod
                  |L1.470|
0001d6  80e8              STRH     r0,[r5,#6]            ;102
                  LC_LABEL119
;;;107            }
;;;108            #else
;;;109            //P40 = (ad * 5000) >> 12; //unit is mV
;;;110            P40 = (ad * 500) >> 12; //unit is 10mV
;;;111            #endif
;;;112    				
;;;113    
;;;114            /* And we loop. */
;;;115            #ifdef ADC_DEBUG
;;;116            SEGGER_RTT_printf (0, "cur unit 0.1A :%d,%d,%d\n", PoutS[0].cur_100ma, PoutS[1].cur_100ma, PoutS[2].cur_100ma);
;;;117            #endif
;;;118    
;;;119            PT_WAIT_UNTIL (pt, ((int) (systick_ms - time1) >= 0));
0001d8  4816              LDR      r0,|L1.564|
0001da  6020              STR      r0,[r4,#0]
0001dc  6830              LDR      r0,[r6,#0]  ; systick_ms
0001de  6969              LDR      r1,[r5,#0x14]  ; time1
0001e0  1a40              SUBS     r0,r0,r1
0001e2  d400              BMI      |L1.486|
0001e4  e74a              B        |L1.124|
                  |L1.486|
0001e6  2000              MOVS     r0,#0
;;;120            //PT_DELAY_MS(pt,15);
;;;121        }
;;;122    
;;;123        /* All protothread functions must end with PT_END() which takes a
;;;124           pointer to a struct pt. */
;;;125        PT_INFINITE_LOOP_END (pt);
;;;126    }
0001e8  bdf8              POP      {r3-r7,pc}
;;;127    static struct pt pt1;
                          ENDP

                  ain_init PROC
;;;128    static void ain_init()
0001ea  b510              PUSH     {r4,lr}
;;;129    {
;;;130        PT_INIT (&pt1);
0001ec  4912              LDR      r1,|L1.568|
0001ee  2000              MOVS     r0,#0
;;;131    
;;;132    		#ifdef B40V60
;;;133    			//PTC7 传感器上拉电路使能， 
;;;134    			#define SER_RES_MODE() gpio_bit_set(GPIOC, GPIO_PIN_7)
;;;135    			#define SER_VOL_MODE() gpio_bit_reset(GPIOC, GPIO_PIN_7)
;;;136    		
;;;137    			#if ((SENSE_SER1_P25_SET == TYPE_VOL) && (SENSE_SER2_P40_SET == TYPE_VOL))
;;;138    				SER_VOL_MODE();
;;;139    			#else
;;;140    				SER_RES_MODE();
0001f0  6008              STR      r0,[r1,#0]  ; pt1
0001f2  2180              MOVS     r1,#0x80
0001f4  4811              LDR      r0,|L1.572|
0001f6  f7fffffe          BL       gpio_bit_set
;;;141    			#endif
;;;142    		#endif
;;;143    	
;;;144    }
0001fa  bd10              POP      {r4,pc}
;;;145    INIT_COMPONENT_EXPORT(ain_init);
                          ENDP

                  ain_app PROC
;;;146    
;;;147    void ain_app()
0001fc  480e              LDR      r0,|L1.568|
;;;148    {
;;;149        protothread_adc (&pt1);
0001fe  e7fe              B        protothread_adc
;;;150    }
;;;151    //INIT_APP_LOOP_EXPORT(ain_app);
                          ENDP

                  |L1.512|
                          DCD      ||.data||
                  |L1.516|
                          DCD      ||.bss||
                  |L1.520|
                          DCD      ||.bss||+0x40
                  |L1.524|
                          DCD      systick_ms
                  |L1.528|
                          DCD      LC_LABEL62
                  |L1.532|
                          DCD      PoutS
                  |L1.536|
                          DCD      LC_LABEL64
                  |L1.540|
                          DCD      LC_LABEL74
                  |L1.544|
                          DCD      LC_LABEL76
                  |L1.548|
                          DCD      0x00000db7
                  |L1.552|
                          DCD      0x00001770
                  |L1.556|
                          DCD      LC_LABEL94
                  |L1.560|
                          DCD      LC_LABEL96
                  |L1.564|
                          DCD      LC_LABEL119
                  |L1.568|
                          DCD      ||.data||+0x1c
                  |L1.572|
                          DCD      0x500a0038

                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  buffer
                          %        64
                  |symbol_number.10|
                          %        64

                          AREA ||.data||, DATA, ALIGN=2

                  count
000000  00                DCB      0x00
                  first
000001  00                DCB      0x00
                  |symbol_number.13|
000002  00                DCB      0x00
                  |symbol_number.14|
000003  00                DCB      0x00
                  P25
000004  0000              DCB      0x00,0x00
                  P40
000006  0000              DCB      0x00,0x00
                  ||sum||
                          DCD      0x00000000
                  |symbol_number.16|
                          DCD      0x00000000
                  time
                          DCD      0x00000000
                  time1
                          DCD      0x00000000
                  i
                          DCD      0x00000000
                  pt1
                          DCD      0x00000000

                          AREA ||.init_fn.4||, DATA, READONLY, ALIGN=2

                  __stan_init_ain_init
                  ||__tagsym$$used||
                          DCD      ain_init

;*** Start embedded assembler ***

#line 1 "src\\adc.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_adc_c_avargeF____REV16|
#line 447 ".\\RTE\\CMSIS\\BF7006AM64\\cmsis_armcc.h"
|__asm___5_adc_c_avargeF____REV16| PROC
#line 448

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_adc_c_avargeF____REVSH|
#line 462
|__asm___5_adc_c_avargeF____REVSH| PROC
#line 463

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
