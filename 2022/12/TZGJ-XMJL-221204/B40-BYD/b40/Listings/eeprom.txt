; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--list --debug -c --asm --interleave --gnu -o.\obj\eeprom.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\obj\eeprom.d --cpu=Cortex-M0 --apcs=interwork -Otime --diag_suppress=9931 -I.\src\pt -I.\src -I.\config -I.\RTE\CMSIS\BF7006AM64 -I.\RTE\Device\BF7006AM64 -I.\RTE\SEGGER -I.\RTE\Startup\BF7006AM64 -I.\RTE\_b40 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\BYD\BYDMicro_DFP\1.1.0\Device\Include\BF7006AMxx -D__UVISION_VERSION=536 -D_RTE_ -D_RTE_ --omf_browse=.\obj\eeprom.crf src\eeprom.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  eeprom_prog_word_nowait PROC
;;;18     
;;;19     ErrorStatus eeprom_prog_word_nowait (uint32_t addr, uint32_t data)
000000  b570              PUSH     {r4-r6,lr}
;;;20     {
000002  4604              MOV      r4,r0
;;;21         if (addr >= EEPROM_MAX_ADDR)
000004  481c              LDR      r0,|L1.120|
000006  460d              MOV      r5,r1                 ;20
000008  4284              CMP      r4,r0
00000a  d301              BCC      |L1.16|
;;;22         {
;;;23             return ERROR;
00000c  2000              MOVS     r0,#0
                  |L1.14|
;;;24         }
;;;25         if (is_eeprom_idle())
;;;26         {
;;;27             addr &= ~ (0x3U);
;;;28             EFLASH_SEL = EEPROM_SEL;
;;;29             EFLASH_MODE = EEPROM_PROG_ERASE_MODE;
;;;30             EFLASH_EBCFG = EEPROM_PROG;
;;;31             * (uint32_t *)addr = data;
;;;32             return SUCCESS;
;;;33         }
;;;34         else
;;;35         {
;;;36             return ERROR;
;;;37         }
;;;38     }
00000e  bd70              POP      {r4-r6,pc}
                  |L1.16|
000010  f7fffffe          BL       is_eeprom_idle
000014  2800              CMP      r0,#0                 ;25
000016  d0fa              BEQ      |L1.14|
000018  08a0              LSRS     r0,r4,#2              ;27
00001a  0080              LSLS     r0,r0,#2              ;27
00001c  2205              MOVS     r2,#5                 ;28
00001e  4917              LDR      r1,|L1.124|
000020  0712              LSLS     r2,r2,#28             ;28
000022  6011              STR      r1,[r2,#0]            ;28
000024  213c              MOVS     r1,#0x3c              ;29
000026  6051              STR      r1,[r2,#4]            ;29
000028  2133              MOVS     r1,#0x33              ;30
00002a  6091              STR      r1,[r2,#8]            ;30
00002c  6005              STR      r5,[r0,#0]            ;32
00002e  2001              MOVS     r0,#1                 ;32
000030  bd70              POP      {r4-r6,pc}
;;;39     
                          ENDP

                  check PROC
;;;40     uint8_t check (void *buf, uint8_t len)
000032  b410              PUSH     {r4}
;;;41     {
;;;42         int i;
;;;43         uint8_t sum;
;;;44         if (len > 2)
000034  2902              CMP      r1,#2
000036  d912              BLS      |L1.94|
;;;45         {
;;;46             sum = 0;
;;;47             if (((uint8_t *)buf)[len - 2] != 0xFF)
000038  1843              ADDS     r3,r0,r1
00003a  3b20              SUBS     r3,r3,#0x20
00003c  7f9c              LDRB     r4,[r3,#0x1e]
00003e  2200              MOVS     r2,#0                 ;46
000040  2cff              CMP      r4,#0xff
000042  d00c              BEQ      |L1.94|
000044  1e89              SUBS     r1,r1,#2
;;;48             {
;;;49                 for (i = (len - 2); i >= 0 ; i--)
000046  d404              BMI      |L1.82|
                  |L1.72|
;;;50                 {
;;;51                     sum += ((uint8_t *)buf)[i];
000048  5c44              LDRB     r4,[r0,r1]
00004a  18a2              ADDS     r2,r4,r2
00004c  b2d2              UXTB     r2,r2
00004e  1e49              SUBS     r1,r1,#1
000050  d5fa              BPL      |L1.72|
                  |L1.82|
;;;52                 }
;;;53     
;;;54                 if (sum == ((uint8_t *)buf)[len - 1])
000052  7fd8              LDRB     r0,[r3,#0x1f]
000054  4290              CMP      r0,r2
000056  d102              BNE      |L1.94|
;;;55                 {
;;;56                     return 1;
;;;57                 }
;;;58             }
;;;59         }
;;;60         return 0;
;;;61     }
000058  bc10              POP      {r4}
00005a  2001              MOVS     r0,#1                 ;56
00005c  4770              BX       lr
                  |L1.94|
00005e  bc10              POP      {r4}
000060  2000              MOVS     r0,#0                 ;60
000062  4770              BX       lr
;;;62     
                          ENDP

                  sumx PROC
;;;63     uint8_t sumx (void *buf, uint8_t len)
000064  4602              MOV      r2,r0
;;;64     {
;;;65         int i;
;;;66         uint8_t sum = 0;
000066  2000              MOVS     r0,#0
000068  1e89              SUBS     r1,r1,#2
00006a  d404              BMI      |L1.118|
                  |L1.108|
;;;67         for (i = (len - 2); i >= 0 ; i--)
;;;68         {
;;;69             sum += ((uint8_t *)buf)[i];
00006c  5c53              LDRB     r3,[r2,r1]
00006e  1818              ADDS     r0,r3,r0
000070  b2c0              UXTB     r0,r0
000072  1e49              SUBS     r1,r1,#1
000074  d5fa              BPL      |L1.108|
                  |L1.118|
;;;70         }
;;;71         return sum;
;;;72     }
000076  4770              BX       lr
;;;73     
                          ENDP

                  |L1.120|
                          DCD      0x400007ff
                  |L1.124|
                          DCD      0x0000cd78

                          AREA ||.data||, DATA, ALIGN=2

                  EepromFlag
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "src\\eeprom.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___8_eeprom_c_92c8a520____REV16|
#line 447 ".\\RTE\\CMSIS\\BF7006AM64\\cmsis_armcc.h"
|__asm___8_eeprom_c_92c8a520____REV16| PROC
#line 448

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___8_eeprom_c_92c8a520____REVSH|
#line 462
|__asm___8_eeprom_c_92c8a520____REVSH| PROC
#line 463

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
