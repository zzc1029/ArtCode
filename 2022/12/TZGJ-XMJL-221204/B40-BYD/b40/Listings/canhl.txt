; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--list --debug -c --asm --interleave --gnu -o.\obj\canhl.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\obj\canhl.d --cpu=Cortex-M0 --apcs=interwork -Otime --diag_suppress=9931 -I.\src\pt -I.\src -I.\config -I.\RTE\CMSIS\BF7006AM64 -I.\RTE\Device\BF7006AM64 -I.\RTE\SEGGER -I.\RTE\Startup\BF7006AM64 -I.\RTE\_b40 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\BYD\BYDMicro_DFP\1.1.0\Device\Include\BF7006AMxx -D__UVISION_VERSION=536 -D_RTE_ -D_RTE_ --omf_browse=.\obj\canhl.crf src\canhl.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  can_isr PROC
;;;61     
;;;62     void can_isr()
000000  b510              PUSH     {r4,lr}
;;;63     {
;;;64     		can_receive_message(&canrxisr);
000002  4873              LDR      r0,|L1.464|
000004  f7fffffe          BL       can_receive_message
;;;65         flag_can = 1;
000008  4972              LDR      r1,|L1.468|
00000a  2001              MOVS     r0,#1
00000c  6008              STR      r0,[r1,#0]  ; flag_can
;;;66     }
00000e  bd10              POP      {r4,pc}
;;;67     
                          ENDP

                  can_frame_received PROC
;;;68     inline uint32_t can_frame_received()
000010  4870              LDR      r0,|L1.468|
;;;69     {
;;;70     		return flag_can;
000012  6800              LDR      r0,[r0,#0]  ; flag_can
;;;71     }
000014  4770              BX       lr
;;;72     
                          ENDP

                  can_recv_frame PROC
;;;73     uint32_t can_recv_frame(can_frame * canrx)
000016  b470              PUSH     {r4-r6}
;;;74     {
;;;75     		if(flag_can)
000018  4c6e              LDR      r4,|L1.468|
00001a  6821              LDR      r1,[r4,#0]  ; flag_can
00001c  2900              CMP      r1,#0
00001e  d02b              BEQ      |L1.120|
000020  2501              MOVS     r5,#1                 ;74
000022  496d              LDR      r1,|L1.472|
000024  072d              LSLS     r5,r5,#28             ;74
000026  600d              STR      r5,[r1,#0]            ;74
000028  f3bf8f4f          DSB                            ;74
00002c  f3bf8f6f          ISB                            ;74
;;;76     		{
;;;77     			disable_can_rx_int();
;;;78     			TransLocal2CanFrame(&canrxisr, canrx);
000030  4a67              LDR      r2,|L1.464|
000032  7c11              LDRB     r1,[r2,#0x10]
000034  7141              STRB     r1,[r0,#5]
000036  7c51              LDRB     r1,[r2,#0x11]
000038  7101              STRB     r1,[r0,#4]
00003a  7941              LDRB     r1,[r0,#5]
00003c  2900              CMP      r1,#0
00003e  d001              BEQ      |L1.68|
000040  6851              LDR      r1,[r2,#4]
000042  e000              B        |L1.70|
                  |L1.68|
000044  6811              LDR      r1,[r2,#0]
                  |L1.70|
000046  6001              STR      r1,[r0,#0]
000048  7c93              LDRB     r3,[r2,#0x12]
00004a  7183              STRB     r3,[r0,#6]
00004c  2b08              CMP      r3,#8
00004e  d900              BLS      |L1.82|
000050  2308              MOVS     r3,#8
                  |L1.82|
000052  2100              MOVS     r1,#0
000054  7183              STRB     r3,[r0,#6]
000056  2b00              CMP      r3,#0
000058  d907              BLS      |L1.106|
                  |L1.90|
00005a  1853              ADDS     r3,r2,r1
00005c  7a1b              LDRB     r3,[r3,#8]
00005e  1846              ADDS     r6,r0,r1
000060  7233              STRB     r3,[r6,#8]
000062  7983              LDRB     r3,[r0,#6]
000064  1c49              ADDS     r1,r1,#1
000066  428b              CMP      r3,r1
000068  d8f7              BHI      |L1.90|
                  |L1.106|
00006a  485c              LDR      r0,|L1.476|
00006c  6005              STR      r5,[r0,#0]
;;;79     			enable_can_rx_int();
;;;80     			flag_can = 0;
00006e  2000              MOVS     r0,#0
000070  6020              STR      r0,[r4,#0]  ; flag_can
;;;81     			return 1;
;;;82     		}
;;;83     		return 0;
;;;84     }
000072  bc70              POP      {r4-r6}
000074  2001              MOVS     r0,#1                 ;81
000076  4770              BX       lr
                  |L1.120|
000078  bc70              POP      {r4-r6}
00007a  2000              MOVS     r0,#0                 ;83
00007c  4770              BX       lr
;;;85     #ifdef FIFO_TYPE1
                          ENDP

                  can_send_bytes PROC
;;;121    
;;;122    uint32_t can_send_bytes(uint32_t id, uint8_t isext, uint8_t *data, uint8_t len)
00007e  b4f0              PUSH     {r4-r7}
;;;123    {
;;;124    		if(flag_can_disable)
000080  4c54              LDR      r4,|L1.468|
000082  6865              LDR      r5,[r4,#4]  ; flag_can_disable
000084  2d00              CMP      r5,#0
000086  d002              BEQ      |L1.142|
;;;125    			return 2;
;;;126    		
;;;127    		if (fifo_get_free(pfifo) >= 1)
;;;128        {
;;;129    			uint32_t i;
;;;130    			can_frame *msg = (can_send_frames + (pfifo->wr_index & (pfifo->max_len - 1)));
;;;131    			
;;;132    			msg->ext = isext;
;;;133    			msg->rtr = 0;
;;;134    
;;;135    			msg->id = id;
;;;136    
;;;137    			msg->len = len;
;;;138    			msg->len = msg->len > 8 ? 8 : msg->len;
;;;139    
;;;140    			for (i = 0; i < 8; i++)
;;;141    					msg->data[i] = data[i];
;;;142    
;;;143    			canfifo.wr_index ++;
;;;144    			return 0;
;;;145    		}
;;;146        return 1;
;;;147    }
000088  bcf0              POP      {r4-r7}
00008a  2002              MOVS     r0,#2                 ;125
00008c  4770              BX       lr
                  |L1.142|
00008e  68a4              LDR      r4,[r4,#8]            ;127  ; pfifo
000090  6826              LDR      r6,[r4,#0]            ;127
000092  6925              LDR      r5,[r4,#0x10]         ;127
000094  6867              LDR      r7,[r4,#4]            ;127
000096  1bae              SUBS     r6,r5,r6              ;127
000098  42fe              CMN      r6,r7                 ;127
00009a  d01c              BEQ      |L1.214|
00009c  6824              LDR      r4,[r4,#0]            ;130
00009e  1e6d              SUBS     r5,r5,#1              ;130
0000a0  402c              ANDS     r4,r4,r5              ;130
0000a2  4d4f              LDR      r5,|L1.480|
0000a4  0124              LSLS     r4,r4,#4              ;130
0000a6  1964              ADDS     r4,r4,r5              ;130
0000a8  7161              STRB     r1,[r4,#5]            ;132
0000aa  2100              MOVS     r1,#0                 ;133
0000ac  7121              STRB     r1,[r4,#4]            ;133
0000ae  6020              STR      r0,[r4,#0]            ;137
0000b0  71a3              STRB     r3,[r4,#6]            ;137
0000b2  2b08              CMP      r3,#8                 ;138
0000b4  d900              BLS      |L1.184|
0000b6  2308              MOVS     r3,#8                 ;138
                  |L1.184|
0000b8  71a3              STRB     r3,[r4,#6]            ;138
0000ba  2000              MOVS     r0,#0                 ;140
                  |L1.188|
0000bc  5c11              LDRB     r1,[r2,r0]            ;141
0000be  1823              ADDS     r3,r4,r0              ;141
0000c0  1c40              ADDS     r0,r0,#1              ;141
0000c2  7219              STRB     r1,[r3,#8]            ;141
0000c4  2808              CMP      r0,#8                 ;140
0000c6  d3f9              BCC      |L1.188|
0000c8  4946              LDR      r1,|L1.484|
0000ca  6808              LDR      r0,[r1,#0]            ;143  ; canfifo
0000cc  1c40              ADDS     r0,r0,#1              ;143
0000ce  6008              STR      r0,[r1,#0]            ;143  ; canfifo
0000d0  bcf0              POP      {r4-r7}
0000d2  2000              MOVS     r0,#0                 ;144
0000d4  4770              BX       lr
                  |L1.214|
0000d6  bcf0              POP      {r4-r7}
0000d8  2001              MOVS     r0,#1                 ;146
0000da  4770              BX       lr
;;;148    #endif
                          ENDP

                  can_send_frame PROC
;;;116    #else
;;;117    uint32_t can_send_frame(can_frame *msg)
0000dc  b410              PUSH     {r4}
;;;118    {
;;;119    		return can_send_bytes(msg->id,msg->ext,msg->data,msg->len);
0000de  4602              MOV      r2,r0
0000e0  6804              LDR      r4,[r0,#0]
0000e2  7983              LDRB     r3,[r0,#6]
0000e4  7941              LDRB     r1,[r0,#5]
0000e6  4620              MOV      r0,r4
0000e8  bc10              POP      {r4}
0000ea  3208              ADDS     r2,r2,#8
0000ec  e7fe              B        can_send_bytes
;;;120    }
;;;121    
                          ENDP

                  can_send_enable PROC
;;;148    #endif
;;;149    void can_send_enable(uint32_t enable)
0000ee  4939              LDR      r1,|L1.468|
;;;150    {
;;;151    		if(enable)
0000f0  2800              CMP      r0,#0
0000f2  d001              BEQ      |L1.248|
;;;152    			flag_can_disable = 0;
0000f4  2000              MOVS     r0,#0
0000f6  e000              B        |L1.250|
                  |L1.248|
;;;153    		else
;;;154    			flag_can_disable = 1;
0000f8  2001              MOVS     r0,#1
                  |L1.250|
0000fa  6048              STR      r0,[r1,#4]            ;152  ; flag_can_disable
;;;155    }
0000fc  4770              BX       lr
;;;156    
                          ENDP

                  protothread_canhl_loop PROC
;;;165    
;;;166    int protothread_canhl_loop(struct pt *pt)
0000fe  b5f8              PUSH     {r3-r7,lr}
;;;167    {
000100  4604              MOV      r4,r0
;;;168      PT_BEGIN(pt);
000102  6800              LDR      r0,[r0,#0]
;;;169    	
;;;170    	can_frame msg;
;;;171    	static uint32_t retry = 0;
;;;172    	static can_frame_struct tx;
;;;173    	
;;;174    	while(1)
;;;175    	{
;;;176    		#ifdef FIFO_TYPE1
;;;177    		PT_WAIT_UNTIL(pt,fifo_get_count(pfifo)>=sizeof(can_frame));		
;;;178    		fifo_get_bytes((RingFifo*)pfifo, (uint8_t *)&msg, sizeof(can_frame));		
;;;179    		TransCanFrame2Local(&msg, &tx);
;;;180    		#else		
;;;181    		PT_WAIT_UNTIL(pt,fifo_have_data(pfifo));				
;;;182    		TransCanFrame2Local((can_send_frames + (pfifo->rd_index & (pfifo->max_len - 1))), &tx);
;;;183    		canfifo.rd_index ++;		
;;;184    		#endif
;;;185    		
;;;186    		retry = 0;		
;;;187    		while(retry ++ < MAX_SEND_RETRY)
;;;188    		{
;;;189    			CAN_Transmit_Msg_Raw(&tx);
;;;190    			
;;;191    			tx_timeout = systick_ms + TX_TIMEOUT_MS;			
000104  4e38              LDR      r6,|L1.488|
000106  4d33              LDR      r5,|L1.468|
000108  2800              CMP      r0,#0                 ;168
00010a  d000              BEQ      |L1.270|
00010c  4700              BX       r0                    ;168
                  |L1.270|
                  LC_LABEL181
00010e  4837              LDR      r0,|L1.492|
000110  6020              STR      r0,[r4,#0]            ;181
000112  68a8              LDR      r0,[r5,#8]            ;181  ; pfifo
000114  6801              LDR      r1,[r0,#0]            ;181
000116  6842              LDR      r2,[r0,#4]            ;181
000118  4291              CMP      r1,r2                 ;181
00011a  d03b              BEQ      |L1.404|
00011c  6841              LDR      r1,[r0,#4]            ;182
00011e  6900              LDR      r0,[r0,#0x10]         ;182
000120  1e40              SUBS     r0,r0,#1              ;182
000122  4001              ANDS     r1,r1,r0              ;182
000124  0108              LSLS     r0,r1,#4              ;182
000126  492e              LDR      r1,|L1.480|
000128  1842              ADDS     r2,r0,r1              ;182
00012a  4931              LDR      r1,|L1.496|
00012c  7950              LDRB     r0,[r2,#5]            ;182
00012e  7408              STRB     r0,[r1,#0x10]         ;182
000130  7910              LDRB     r0,[r2,#4]            ;182
000132  7448              STRB     r0,[r1,#0x11]         ;182
000134  7950              LDRB     r0,[r2,#5]            ;182
000136  2800              CMP      r0,#0                 ;182
000138  6810              LDR      r0,[r2,#0]            ;182
00013a  d001              BEQ      |L1.320|
00013c  6048              STR      r0,[r1,#4]            ;182
00013e  e000              B        |L1.322|
                  |L1.320|
000140  6008              STR      r0,[r1,#0]            ;182
                  |L1.322|
000142  7993              LDRB     r3,[r2,#6]            ;182
000144  748b              STRB     r3,[r1,#0x12]         ;182
000146  2b08              CMP      r3,#8                 ;182
000148  d900              BLS      |L1.332|
00014a  2308              MOVS     r3,#8                 ;182
                  |L1.332|
00014c  2000              MOVS     r0,#0                 ;182
00014e  748b              STRB     r3,[r1,#0x12]         ;182
000150  2b00              CMP      r3,#0                 ;182
000152  d907              BLS      |L1.356|
                  |L1.340|
000154  1813              ADDS     r3,r2,r0              ;182
000156  7a1b              LDRB     r3,[r3,#8]            ;182
000158  180f              ADDS     r7,r1,r0              ;182
00015a  723b              STRB     r3,[r7,#8]            ;182
00015c  7c8b              LDRB     r3,[r1,#0x12]         ;182
00015e  1c40              ADDS     r0,r0,#1              ;182
000160  4283              CMP      r3,r0                 ;182
000162  d8f7              BHI      |L1.340|
                  |L1.356|
000164  491f              LDR      r1,|L1.484|
000166  6848              LDR      r0,[r1,#4]            ;183  ; canfifo
000168  1c40              ADDS     r0,r0,#1              ;183
00016a  6048              STR      r0,[r1,#4]            ;183  ; canfifo
00016c  2001              MOVS     r0,#1                 ;187
00016e  60e8              STR      r0,[r5,#0xc]          ;187  ; retry
                  |L1.368|
000170  481f              LDR      r0,|L1.496|
000172  f7fffffe          BL       can_transmit_message
000176  f7fffffe          BL       can_transmit_request
00017a  6830              LDR      r0,[r6,#0]  ; systick_ms
00017c  300a              ADDS     r0,r0,#0xa
00017e  6128              STR      r0,[r5,#0x10]  ; tx_timeout
                  LC_LABEL192
;;;192    			PT_WAIT_UNTIL(pt,((int)(systick_ms - tx_timeout) >= 0)||((can_interrupt_flag_get() & CAN_IF_TI) != 0x00U));
000180  481c              LDR      r0,|L1.500|
000182  6020              STR      r0,[r4,#0]
000184  6830              LDR      r0,[r6,#0]  ; systick_ms
000186  6929              LDR      r1,[r5,#0x10]  ; tx_timeout
000188  1a40              SUBS     r0,r0,r1
00018a  d505              BPL      |L1.408|
00018c  f7fffffe          BL       can_interrupt_flag_get
000190  0780              LSLS     r0,r0,#30
000192  d401              BMI      |L1.408|
                  |L1.404|
000194  2000              MOVS     r0,#0
;;;193    			
;;;194    			if((can_interrupt_flag_get() & CAN_IF_TI) != 0x00U)
;;;195    			{
;;;196    				can_int_flag_clr (CAN_IF_TI);
;;;197    				break;
;;;198    			}
;;;199    			can_int_flag_clr (CAN_IF_TI);
;;;200    		}
;;;201    	}
;;;202    	PT_INFINITE_LOOP_END(pt);
;;;203    }
000196  bdf8              POP      {r3-r7,pc}
                  |L1.408|
000198  f7fffffe          BL       can_interrupt_flag_get
00019c  0780              LSLS     r0,r0,#30             ;194
00019e  d503              BPL      |L1.424|
0001a0  2002              MOVS     r0,#2                 ;196
0001a2  f7fffffe          BL       can_int_flag_clr
0001a6  e7b2              B        |L1.270|
                  |L1.424|
0001a8  2002              MOVS     r0,#2                 ;199
0001aa  f7fffffe          BL       can_int_flag_clr
0001ae  68e8              LDR      r0,[r5,#0xc]          ;187  ; retry
0001b0  1c41              ADDS     r1,r0,#1              ;187
0001b2  60e9              STR      r1,[r5,#0xc]          ;187  ; retry
0001b4  2803              CMP      r0,#3                 ;187
0001b6  d3db              BCC      |L1.368|
0001b8  e7a9              B        |L1.270|
;;;204    
                          ENDP

                  canhl_loop PROC
;;;207    
;;;208    void canhl_loop()
0001ba  b510              PUSH     {r4,lr}
;;;209    {
;;;210    	protothread_canhl_loop(&pt_can_send);
0001bc  480e              LDR      r0,|L1.504|
0001be  f7fffffe          BL       protothread_canhl_loop
;;;211    	if((can_status_get() & CAN_SR_BS) != 0x00U)
0001c2  f7fffffe          BL       can_status_get
0001c6  0600              LSLS     r0,r0,#24
0001c8  d501              BPL      |L1.462|
;;;212    	{
;;;213    			can_config();
0001ca  f7fffffe          BL       can_config
                  |L1.462|
;;;214    	}
;;;215    }
0001ce  bd10              POP      {r4,pc}
;;;216    
                          ENDP

                  |L1.464|
                          DCD      ||.bss||+0x14
                  |L1.468|
                          DCD      ||.data||
                  |L1.472|
                          DCD      0xe000e180
                  |L1.476|
                          DCD      0xe000e100
                  |L1.480|
                          DCD      ||.bss||+0x28
                  |L1.484|
                          DCD      ||.data||+0x18
                  |L1.488|
                          DCD      systick_ms
                  |L1.492|
                          DCD      LC_LABEL181
                  |L1.496|
                          DCD      ||.bss||
                  |L1.500|
                          DCD      LC_LABEL192
                  |L1.504|
                          DCD      ||.data||+0x14

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  ||tx||
                          %        20
                  canrxisr
                          %        20
                  can_send_frames
                          %        256

                          AREA ||area_number.4||, DATA, NOINIT, ALIGN=0

                          EXPORTAS ||area_number.4||, ||.bss||
                  pcan_send_frames
                          %        16

                          AREA ||.data||, DATA, ALIGN=2

                  flag_can
                          DCD      0x00000000
                  flag_can_disable
                          DCD      0x00000000
                  pfifo
                          DCD      canfifo
                  retry
                          DCD      0x00000000
                  tx_timeout
                          DCD      0x00000000
                  pt_can_send
                          DCD      0x00000000
                  canfifo
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000010
                          DCD      pcan_send_frames

;*** Start embedded assembler ***

#line 1 "src\\canhl.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_canhl_c_pfifo____REV16|
#line 447 ".\\RTE\\CMSIS\\BF7006AM64\\cmsis_armcc.h"
|__asm___7_canhl_c_pfifo____REV16| PROC
#line 448

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_canhl_c_pfifo____REVSH|
#line 462
|__asm___7_canhl_c_pfifo____REVSH| PROC
#line 463

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
